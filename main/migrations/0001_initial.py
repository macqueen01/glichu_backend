# Generated by Django 4.1.5 on 2023-06-04 05:23

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mockingJae_back.storages


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, null=True)),
                ('username', models.CharField(max_length=120, unique=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('is_superuser', models.IntegerField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, null=True)),
                ('is_staff', models.IntegerField(blank=True, null=True)),
                ('instagram_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('instagram_username', models.CharField(blank=True, max_length=120, null=True)),
                ('apple_id', models.CharField(blank=True, max_length=120, null=True, unique=True)),
                ('apple_username', models.CharField(blank=True, max_length=120, null=True)),
                ('profile_image', models.ImageField(blank=True, default='profile_image/default.png', null=True, storage=mockingJae_back.storages.S3Storage(bucket_name='mockingjae-test-bucket', custom_domain=None), upload_to='profile_image')),
                ('is_invited', models.IntegerField(blank=True, default=0, null=True)),
                ('invited_at', models.DateTimeField(blank=True, null=True)),
                ('followers', models.ManyToManyField(related_name='followings', to=settings.AUTH_USER_MODEL)),
                ('invited', models.ManyToManyField(related_name='invited_by', to=settings.AUTH_USER_MODEL)),
                ('tagger', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'auth_user',
            },
        ),
        migrations.CreateModel(
            name='AudioModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('forward_audio_url', models.CharField(max_length=500)),
                ('backward_audio_url', models.CharField(max_length=500)),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_audios', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Remix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('remix_directory', models.CharField(default='/', max_length=500, null=True)),
                ('uploaded_to_s3', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('task_queue_json', models.TextField(default='{}', null=True)),
                ('length', models.IntegerField(default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scrolls',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Untitled', max_length=100)),
                ('created_at', models.DateTimeField()),
                ('uploaded', models.IntegerField(default=1)),
                ('ipfs_hash', models.CharField(default='', max_length=100)),
                ('scrolls_url', models.CharField(default='', max_length=400)),
                ('scrolls_dir', models.CharField(default='/', max_length=200)),
                ('video_url', models.CharField(default='/', max_length=400)),
                ('scrolled', models.IntegerField(default=0)),
                ('height', models.IntegerField(default=0)),
                ('length', models.IntegerField(default=0)),
                ('audios', models.ManyToManyField(null=True, related_name='used_in', to='main.audiomodel')),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_scrolls', to=settings.AUTH_USER_MODEL)),
                ('liked_by', models.ManyToManyField(related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('mention', models.ManyToManyField(related_name='mentioned_in', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.CharField(default='', max_length=30)),
                ('created_at', models.DateTimeField()),
                ('created_by', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='created_tags', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_preprocess', models.FileField(default='', upload_to='archive/video/%Y%m%d')),
                ('public_url', models.CharField(default='/', max_length=400, null=True)),
                ('url_postprocess', models.TextField(default='', null=True)),
                ('created_at', models.DateTimeField()),
                ('title', models.CharField(default='Untitled', max_length=400)),
                ('thumbnail', models.ImageField(blank=True, null=True, storage=mockingJae_back.storages.S3Storage(bucket_name='mockingjae-test-bucket', custom_domain=None), upload_to='thumbnails/%Y%m%d')),
                ('uploader', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_video', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('L', 'Like'), ('D', 'Dislike'), ('N', 'Neutral')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scrolls', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.scrolls')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('task_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('task_type', models.CharField(default='', max_length=100)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TagInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('L', 'Like'), ('D', 'Dislike'), ('N', 'Neutral')], max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='scrolls',
            name='original',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.videomedia'),
        ),
        migrations.AddField(
            model_name='scrolls',
            name='saved_by',
            field=models.ManyToManyField(null=True, related_name='saves', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scrolls',
            name='shared_by',
            field=models.ManyToManyField(null=True, related_name='shares', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scrolls',
            name='tags',
            field=models.ManyToManyField(related_name='mentioned_in', to='main.tag'),
        ),
        migrations.CreateModel(
            name='RemixPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scrolls_uploader_has_access', models.IntegerField(default=0)),
                ('all_users_have_access', models.IntegerField(default=0)),
                ('remix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.remix')),
            ],
        ),
        migrations.AddField(
            model_name='remix',
            name='scrolls',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.scrolls'),
        ),
        migrations.AddField(
            model_name='remix',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.FloatField()),
                ('scrolls', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.scrolls')),
                ('tag', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_read', models.IntegerField(default=0)),
                ('content', models.TextField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('remix', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.remix')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Highlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0)),
                ('title', models.CharField(default='Untitled', max_length=100)),
                ('scrolls', models.ManyToManyField(default=None, null=True, related_name='highlight', to='main.scrolls')),
            ],
        ),
        migrations.CreateModel(
            name='Cell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(default='', max_length=130)),
                ('index', models.IntegerField(default=0)),
                ('scrolls', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cells', to='main.scrolls')),
            ],
        ),
    ]
